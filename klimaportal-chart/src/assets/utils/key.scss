@import 'src/assets/tools.scss';

.key:not(.inline) {
    --key-bg-color: #000;
    --key-text-color: #000;
    --key-active-bg-color: #000;
    --key-active-text-color: #fff;
    --key-spinner-size: 1.25rem;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--key-text-color);
    border: 1px solid var(--key-text-color);
    // background-color: var(--key-bg-color);
    text-decoration: none;
    padding: 0.4375rem 1.5rem;
    text-align: center;
    font-weight: bold;
    font-size: var(--k-font-h5-size);
    line-height: 1;
    height: calc(var(--k-font-h5-size) * 2 + 0.875rem);
    cursor: pointer;
    user-select: none;
    opacity: 1;
    transform: translate(0, 0);
    transition: color 0.3s 0.15s, border 0.3s, background-color 0.3s,
        transform 0.15s, opacity 0.5s;

    &::before {
        content: '';
        position: absolute;
        // top: -0.5rem;
        // left: -0.5rem;
        // display: block;
        // width: calc(100% + 1rem);
        // height: calc(100% + 1rem);
        top: 0;
        left: 0;
        display: block;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
        // background-color: var(--key-bg-color);
        // border: 1px solid var(--key-bg-color);
        box-shadow: 0 0 0 0rem rgba(#000, 1);
        // transform: scale(0.9, 0.75);
        opacity: 1;
        transition: opacity 0s 0s, transform 0.125s 0s $ease-out-cubic,
            box-shadow 0s 0s $ease-out-cubic;
    }

    html.no-touch-device &:hover {
        color: var(--key-active-text-color);
        background-color: var(--key-active-bg-color);
        border-color: var(--key-active-bg-color);

        .spinner {
            --spinner-color: var(--key-active-text-color);
        }
    }

    &.active {
        &::before {
            animation: key-ghost 0.6s $ease-out-cubic;
            // transform: scale(1.05, 1.2);
            // opacity: 0;
            // transition: opacity 0.6s, transform 0.6s $ease-out-cubic;
        }
    }

    &:active {
        transform: translate(0, 2px);
    }

    &.disabled {
        pointer-events: none;
        cursor: default;
        opacity: 0.5;
    }

    &.broken-link {
        --key-text-color: #f00;
        --key-bg-color: #f00;

        &::after {
            content: '[broken-link]';
            display: inline-block;
        }
    }

    .icon {
        width: 1.25rem;
        margin-left: 1rem;
        transform: translate(0, 1px);
        --icon-transition-time: 0s;
    }

    .spinner {
        --spinner-size: var(--key-spinner-size);
        position: absolute;
        right: 0;
        top: 0;
        display: block;
        margin-right: 1rem;
    }

    .spinner-wrapper {
        position: relative;
        width: var(--key-spinner-size);
        height: var(--key-spinner-size);
        max-width: 0;
        width: calc(var(--key-spinner-size) + 1rem);
        transition: max-width 0.25s $ease-out-quad;
    }

    &.loading {
        .spinner-wrapper {
            max-width: calc(var(--key-spinner-size) + 1rem);
            transition: max-width 0.25s $ease-out-quad;
        }
    }
}

@keyframes key-ghost {
    0% {
        box-shadow: 0 0 0 0rem rgba(#000, 0.5);
        // transform: scale(0.9, 0.75);
        // opacity: 1;
    }
    100% {
        box-shadow: 0 0 0 0.75rem rgba(#000, 0);
        // transform: scale(1, 1);
        // opacity: 0;
    }
}

.key.inline {
    --key-text-color: #000;
    // --key-bg-color: #000;
    --key-active-text-color: var(--k-color-primary-base);
    // --key-active-bg-color: #000;
    position: relative;
    display: inline-flex;
    flex-flow: row-reverse nowrap;
    align-items: center;
    gap: 0.5rem;
    font-weight: 700;
    border: none;
    cursor: pointer;
    user-select: none;
    color: var(--key-text-color);

    .spinner-wrapper {
        display: none;
    }

    .text {
        display: block;
        line-height: 1;
        transition: color 0.25s;
    }

    .icon {
        --icon-color: inherit;
        width: 1.25rem;
        transition: color 0.25s;
    }

    &:not(.toggle) {
        &,
        &:visited,
        &:active {
            color: var(--key-active-text-color);
        }

        html.no-touch-device &:hover {
            color: var(--key-active-text-color);
        }
    }

    &.toggle {
        &.on {
            color: var(--key-active-text-color);
        }
    }
}
